// <auto-generated />
using System;
using HungryPizza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HungryPizza.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200818032222_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HungryPizza.Business.Models.PedidoPizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoPizza")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PedidoPizzas");
                });

            modelBuilder.Entity("HungryPizza.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("HungryPizza.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HungryPizza.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sabor")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5249adeb-8dc5-4db2-a1b1-97fd4a453846"),
                            Sabor = "3 Queijos",
                            Valor = 50m
                        },
                        new
                        {
                            Id = new Guid("bddb4457-4e57-4aa5-b645-224080b21bdb"),
                            Sabor = "Frango com requeijão",
                            Valor = 59.99m
                        },
                        new
                        {
                            Id = new Guid("fcf9e283-df6c-4529-9243-524c8426cfb7"),
                            Sabor = "Mussarela",
                            Valor = 42.50m
                        },
                        new
                        {
                            Id = new Guid("2a2f34a0-9669-4782-8a43-82a364ec2beb"),
                            Sabor = "Calabresa",
                            Valor = 42.50m
                        },
                        new
                        {
                            Id = new Guid("88152c7e-761b-4cf3-86ce-d399fbaf9ca7"),
                            Sabor = "Pepperoni",
                            Valor = 55m
                        },
                        new
                        {
                            Id = new Guid("1e461664-3836-4546-97bb-5a2da9407b7e"),
                            Sabor = "Portuguesa",
                            Valor = 45m
                        },
                        new
                        {
                            Id = new Guid("e5cdc739-08e8-4686-88b5-e4148376b2d8"),
                            Sabor = "Veggie",
                            Valor = 59.99m
                        });
                });

            modelBuilder.Entity("HungryPizza.Business.Models.PedidoPizza", b =>
                {
                    b.HasOne("HungryPizza.Models.Pedido", "Pedido")
                        .WithMany("PedidoPizzas")
                        .HasForeignKey("PedidoId")
                        .IsRequired();

                    b.HasOne("HungryPizza.Models.Pizza", "Pizza")
                        .WithMany("PedidoPizzas")
                        .HasForeignKey("PizzaId")
                        .IsRequired();
                });

            modelBuilder.Entity("HungryPizza.Models.Pedido", b =>
                {
                    b.HasOne("HungryPizza.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
